name: Article Draft PR

on:
    push:
        branches:
            - blog/*
        paths:
           - '**/content/blogs/*.md'
    workflow_dispatch:

jobs:
    create_pr:
        name: Create Draft PR
        runs-on: ubuntu-latest

        steps:
            - name: Create Github Apps Token
              uses: actions/create-github-app-token@v1
              id: gh_token
              with:
                app-id: ${{ secrets.APP_ID }}
                private-key: ${{ secrets.PRIVATE_KEY }}

            - name: Checkout
              uses: actions/checkout@v2

            - name: Create Draft Pull Request
              uses: actions/github-script@v7
              with:
                github-token: ${{ steps.gh_token.outputs.token }}
                script: |
                  const sha = context.payload.pull_request?.head.sha ?? context.sha;
                  const { repo, owner } = context.repo
                  
                  const pulls = await github.rest.pulls.list({
                    owner: owner,
                    repo: repo,
                    head: context.ref,
                    base: 'main',
                    state: 'open'
                  })
                  console.log(pulls)
                  
                  if (pulls.data.length < 1) {
                    await github.rest.pulls.create({
                      title: '[CI] Draft Article Works',
                      owner: owner,
                      repo: repo,
                      head: context.ref,
                      base: 'main',
                      body: [
                        'This is a draft PR for ${{ github.ref_name }}',
                        'Auto generated by [actions/github-script](https://github.com/actions/github-script).'
                      ].join('\n')
                    })
                  }
            #
            # - name: Check already existing PR
            #   id: check_pr
            #   run: |
            #         gh pr list --state open --base main --head $GITHUB_REF
            #   env:
            #       GH_TOKEN: ${{ steps.gh_token.outputs.token }}
            #       GITHUB_REF: ${{ github.ref }}
            #
            # - name: Create PR
            #   if: steps.check_pr.outputs.stdout == ''
            #   run: |
            #         gh pr create --base main --head $GITHUB_REF --title "Draft PR for $GITHUB_REF" --body "This is a draft PR for $GITHUB_REF"
            #   env:
            #       GH_TOKEN: ${{ steps.gh_token.outputs.token }}
            #       GITHUB_REF: ${{ github.ref }}
